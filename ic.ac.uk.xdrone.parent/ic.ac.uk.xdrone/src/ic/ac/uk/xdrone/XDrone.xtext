grammar ic.ac.uk.xdrone.XDrone with org.eclipse.xtext.common.Terminals

generate xDrone "http://www.ac.ic/uk/xdrone/XDrone"

import "http://www.eclipse.org/xtext/xbase/Xbase"
 
Program :
  main = Main
;
  
Main :
  'xdrone' name = ID
  
  (downwardcamera+=DownwardCamera';'?)?

  'begin'
  (commands+=Snapshot';'?)?
  ((takeoff+=Takeoff';'?)
  (commands+=Command ';'?)*
  (land+=Land';'?))?
  'end'
  
  ('global_conditional' '(' (featurematch+=FeatureMatch | facedetect+=FaceDetect) ')' 
  	'{'
  		(conditional_commands+=Command';'?)*
  	'}'
  )?
;

DownwardCamera: 'USEDOWNWARDCAMERA';

FaceDetect: 'FACEDETECT';

FeatureMatch:
	'FEATUREMATCH' '('image_name = ID')'
;

Takeoff: 'TAKEOFF';
Land : 'LAND';

Command:
	Up 
	| Down 
	| Left 
	| Right 
	| Forward 
	| Backward
	| RotateL
	| RotateR
	| Wait
	| Snapshot
;

Snapshot:
	'SNAPSHOT' '('image_name = ID')'
;
Up: 
	'UP' '('milliseconds = INT')'
;
Down: 
	'DOWN' '('milliseconds = INT')'
;
Left: 
	'LEFT' '('milliseconds = INT')'
;
Right: 
	'RIGHT' '('milliseconds = INT')'
;
Forward: 
	'FORWARD' '('milliseconds = INT')'
;
Backward: 
	'BACKWARD' '('milliseconds = INT')'
;
RotateL: 
	'ROTATELEFT' '('milliseconds = INT')'
;
RotateR: 
	'ROTATERIGHT' '('milliseconds = INT')'
;
Wait:
	'WAIT' '(' milliseconds = INT ')'
;
